<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans.xsd
               http://www.springframework.org/schema/aop
               http://www.springframework.org/schema/aop/spring-aop.xsd
               http://www.springframework.org/schema/context
               http://www.springframework.org/schema/context/spring-context.xsd
               http://www.springframework.org/schema/mvc
               https://www.springframework.org/schema/mvc/spring-mvc.xsd
               http://www.springframework.org/schema/tx
               http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--    &lt;!&ndash; 自动扫描包 扫描所有包 &ndash;&gt;-->
    <context:component-scan base-package="com.m.*"/>
    <!--  启用注解驱动  -->
    <tx:annotation-driven />
    <!--  引入配置文件  -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>
    <!--  JNDI获取数据源(使用dbcp连接池)  -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
    </bean>

    <!-- Spring整合MyBatis   -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/m/mapper/*.xml"></property>
    </bean>

    <!--  Dao接口位置 Spring会使用动态代理自动实现dao的impl 所以不需要手动写dao的实现类了 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.m.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!--  配置事务管理  -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

<!--    &lt;!&ndash;  事务通知类  不建议用 麻烦不灵活  &ndash;&gt;-->
<!--    &lt;!&ndash; 通知 &ndash;&gt;-->
<!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
<!--        <tx:attributes>-->
<!--            &lt;!&ndash; 传播行为 &ndash;&gt;-->
<!--            <tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"/>-->
<!--            <tx:method name="insert*" propagation="REQUIRED" />-->
<!--            <tx:method name="delete*" propagation="REQUIRED" />-->
<!--            <tx:method name="update*" propagation="REQUIRED" />-->
<!--            <tx:method name="query*" propagation="SUPPORTS" read-only="true" />-->
<!--            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />-->
<!--            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />-->
<!--            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->
<!--    &lt;!&ndash; 切面 &ndash;&gt;-->
<!--    <aop:config>-->
<!--        <aop:advisor advice-ref="txAdvice"-->
<!--                     pointcut="execution(public * com.m.service.impl.*(..))" />-->
<!--    </aop:config>-->

    <!--  配置事务注解 启动事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>