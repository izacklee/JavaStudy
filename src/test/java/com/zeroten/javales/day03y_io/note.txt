1.字符流：处理的是字符，一般来说，只有处理字符的时候，缓冲才有意义。

2.字符通常要占用两个字节。

3.InputStreamReader：可以用来指定字符集。

4.BufferReader：
    （1）有缓冲
    （2）可以提高读的效率
    （3）缓冲大小可以自己指定
    （4）一次读一行

5.OutputStreamWriter：可以指定字符集。

6.BufferedWriter：
    （1）有缓冲
    （2）可以提高写的效率
    （3）缓冲大小可以自己指定

7.读写数据
    （1）字符串：长度是固定的
    （2）读写顺序不能乱
    （3）类型要对应
    （4）不是序列化

8.JDK内置序列化和反序列化
    （1）序列化将对象转化为二进制的字节序列。
    （2）序列化的第一步，必须实现Serializable接口。
    （3）Serializable接口是一个用于标识的接口。
    （4）ObjectOutputStream/ObjectInputStream是序列化和反序列化的两个实现类。
             1）主要方法：
                a、writeObject();
                b、readObject();
             2）如果不加实现序列化接口，会抛NotSerializableException异常
             3）版本号不一致，无法反序列化（不写版本号，默认始终一样）
             4）在序列化的时候，包括类的成员属性，及其子类，都必须是可序列化类
             5) 但是如果该类的父类，实现了序列化接口，一样可以序列化。
